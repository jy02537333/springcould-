<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zrys.humansociety.collectiondata.dao.DataMapper" >
    <resultMap id="BaseResultMap" type="pri.zxw.spring_base.model.User" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="root_id" property="rootId" jdbcType="VARCHAR" />
        <result column="sub_id" property="subId" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="purpose" property="purpose" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="creator" property="creator" jdbcType="VARCHAR" />
        <result column="is_delete" property="isDelete" jdbcType="BIT" />
        <result column="data_type" property="dataType" jdbcType="SMALLINT" />
        <result column="data_source" property="dataSource" jdbcType="VARCHAR" />
        <result column="data_size" property="dataSize" jdbcType="BIGINT" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, root_id, sub_id, name, description, purpose, create_time, update_time, creator,
        is_delete, data_type, data_source, data_size
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="pri.zxw.spring_base.model.UserExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from data
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from data
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from data
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="pri.zxw.spring_base.model.UserExample" >
        delete from data
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="pri.zxw.spring_base.model.User" >
        insert into data (id, root_id, sub_id,
        name, description, purpose,
        create_time, update_time, creator,
        is_delete, data_type, data_source,
        data_size)
        values (#{id,jdbcType=VARCHAR}, #{rootId,jdbcType=VARCHAR}, #{subId,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{purpose,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR},
        #{isDelete,jdbcType=BIT}, #{dataType,jdbcType=SMALLINT}, #{dataSource,jdbcType=VARCHAR},
        #{dataSize,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="pri.zxw.spring_base.model.UserExample" >
        insert into data
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="rootId != null" >
                root_id,
            </if>
            <if test="subId != null" >
                sub_id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="purpose != null" >
                purpose,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="creator != null" >
                creator,
            </if>
            <if test="isDelete != null" >
                is_delete,
            </if>
            <if test="dataType != null" >
                data_type,
            </if>
            <if test="dataSource != null" >
                data_source,
            </if>
            <if test="dataSize != null" >
                data_size,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="rootId != null" >
                #{rootId,jdbcType=VARCHAR},
            </if>
            <if test="subId != null" >
                #{subId,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="purpose != null" >
                #{purpose,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null" >
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null" >
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="dataType != null" >
                #{dataType,jdbcType=SMALLINT},
            </if>
            <if test="dataSource != null" >
                #{dataSource,jdbcType=VARCHAR},
            </if>
            <if test="dataSize != null" >
                #{dataSize,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="pri.zxw.spring_base.model.UserExample" resultType="java.lang.Integer" >
        select count(*) from data
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update data
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.rootId != null" >
                root_id = #{record.rootId,jdbcType=VARCHAR},
            </if>
            <if test="record.subId != null" >
                sub_id = #{record.subId,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null" >
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.purpose != null" >
                purpose = #{record.purpose,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.creator != null" >
                creator = #{record.creator,jdbcType=VARCHAR},
            </if>
            <if test="record.isDelete != null" >
                is_delete = #{record.isDelete,jdbcType=BIT},
            </if>
            <if test="record.dataType != null" >
                data_type = #{record.dataType,jdbcType=SMALLINT},
            </if>
            <if test="record.dataSource != null" >
                data_source = #{record.dataSource,jdbcType=VARCHAR},
            </if>
            <if test="record.dataSize != null" >
                data_size = #{record.dataSize,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update data
        set id = #{record.id,jdbcType=VARCHAR},
        root_id = #{record.rootId,jdbcType=VARCHAR},
        sub_id = #{record.subId,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        purpose = #{record.purpose,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        creator = #{record.creator,jdbcType=VARCHAR},
        is_delete = #{record.isDelete,jdbcType=BIT},
        data_type = #{record.dataType,jdbcType=SMALLINT},
        data_source = #{record.dataSource,jdbcType=VARCHAR},
        data_size = #{record.dataSize,jdbcType=BIGINT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="pri.zxw.spring_base.model.User" >
        update data
        <set >
            <if test="rootId != null" >
                root_id = #{rootId,jdbcType=VARCHAR},
            </if>
            <if test="subId != null" >
                sub_id = #{subId,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="purpose != null" >
                purpose = #{purpose,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null" >
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null" >
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="dataType != null" >
                data_type = #{dataType,jdbcType=SMALLINT},
            </if>
            <if test="dataSource != null" >
                data_source = #{dataSource,jdbcType=VARCHAR},
            </if>
            <if test="dataSize != null" >
                data_size = #{dataSize,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="pri.zxw.spring_base.model.User" >
        update data
        set root_id = #{rootId,jdbcType=VARCHAR},
        sub_id = #{subId,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        purpose = #{purpose,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        creator = #{creator,jdbcType=VARCHAR},
        is_delete = #{isDelete,jdbcType=BIT},
        data_type = #{dataType,jdbcType=SMALLINT},
        data_source = #{dataSource,jdbcType=VARCHAR},
        data_size = #{dataSize,jdbcType=BIGINT}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>